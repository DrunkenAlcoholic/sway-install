#!/usr/bin/env bash
set -euo pipefail

SINK='@DEFAULT_AUDIO_SINK@'

if ! command -v wpctl >/dev/null 2>&1; then
    echo "wpctl not found" >&2
    exit 1
fi

# --- volume helpers ---
get_volume(){
    local info
    info="$(wpctl get-volume "$SINK" 2>/dev/null)" || return 1

    if [[ "$info" == *"[MUTED]"* ]]; then
        echo "muted"
        return 0
    fi

    awk '{
        for (i = 1; i <= NF; i++) {
            if ($i ~ /^[0-9]+(\.[0-9]+)?$/) {
                printf "%d%%\n", int(($i * 100) + 0.5)
                exit
            }
        }
    }' <<<"$info"
}

volume_up(){
    wpctl set-volume "$SINK" 5%+ --limit 1.5 >/dev/null
}

volume_down(){
    wpctl set-volume "$SINK" 5%- --limit 1.5 >/dev/null
}

toggle_mute(){
    wpctl set-mute "$SINK" toggle >/dev/null
}

# --- mako/libnotify notification ---
# We store the previous notification ID so we can replace it.
NOTIFY_ID_FILE="/tmp/waybar_volume_notify_id"

notify_cmd(){
    local human vol summary prev_id new_id

    human="$(get_volume || echo "muted")"

    if [[ "$human" == "muted" ]]; then
        vol=0
        summary="ðŸ”‡ Muted"
    else
        vol="${human%%%}"
        summary="ðŸ”Š Volume: $human"
    fi

    command -v notify-send >/dev/null 2>&1 || return 0

    if [[ -f "$NOTIFY_ID_FILE" ]]; then
        prev_id="$(<"$NOTIFY_ID_FILE")"
    fi

    if [[ -n "${prev_id:-}" ]]; then
        new_id="$(notify-send -a "waybar-volume" -p \
                 --hint "int:value:$vol" \
                 --replace-id "$prev_id" \
                 "$summary")"
    else
        new_id="$(notify-send -a "waybar-volume" -p \
                 --hint "int:value:$vol" \
                 "$summary")"
    fi

    echo "$new_id" > "$NOTIFY_ID_FILE"
}

case "${1:-}" in
    --up)
        volume_up
        notify_cmd
        ;;
    --down)
        volume_down
        notify_cmd
        ;;
    --toggle)
        toggle_mute
        notify_cmd
        ;;
    *)
        get_volume
        ;;
esac
