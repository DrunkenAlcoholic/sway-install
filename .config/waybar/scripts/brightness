#!/usr/bin/env bash

# --- brightness helpers ---
get_brightness(){
    # Robust: compute % from current and max instead of parsing text
    local cur max
    cur="$(brightnessctl g 2>/dev/null)" || return 1
    max="$(brightnessctl m 2>/dev/null)" || return 1
    # integer percent 0..100
    echo $(( cur * 100 / max ))
}

brightness_up(){
    brightnessctl set 5%+ -q
}

brightness_down(){
    brightnessctl set 5%- -q
}

# --- mako/libnotify notification ---
NOTIFY_ID_FILE="/tmp/waybar_brightness_notify_id"

notify_cmd(){
    local pct summary prev_id new_id
    pct="$(get_brightness)" || return 0
    summary="☀️ Brightness: ${pct}%"

    [[ -f "$NOTIFY_ID_FILE" ]] && prev_id="$(cat "$NOTIFY_ID_FILE")"

    if [[ -n "$prev_id" ]]; then
        new_id="$(notify-send -a "waybar-brightness" -p \
                 --hint "int:value:${pct}" \
                 --replace-id "$prev_id" \
                 "$summary")"
    else
        new_id="$(notify-send -a "waybar-brightness" -p \
                 --hint "int:value:${pct}" \
                 "$summary")"
    fi

    echo "$new_id" > "$NOTIFY_ID_FILE"
}

# --- main ---
if ! command -v brightnessctl >/dev/null 2>&1; then
    echo "brightnessctl not found" >&2
    exit 1
fi

case "$1" in
    --up)    brightness_up && notify_cmd ;;
    --down)  brightness_down && notify_cmd ;;
    *)       pct="$(get_brightness)" && echo "${pct}%"
esac
